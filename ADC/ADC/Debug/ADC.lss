
ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001056  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fe2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800100  00800100  00001056  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001056  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001088  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  000010c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001110  00000000  00000000  00001168  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008fe  00000000  00000000  00002278  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000905  00000000  00000000  00002b76  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c8  00000000  00000000  0000347c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000538  00000000  00000000  00003644  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a43  00000000  00000000  00003b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  000045bf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4f 04 	jmp	0x89e	; 0x89e <__ctors_end>
   4:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
   8:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
   c:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  10:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  14:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  18:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  1c:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  20:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  24:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  28:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  2c:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  30:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  34:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  38:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  3c:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  40:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  44:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  48:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  4c:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  50:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  54:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  58:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  5c:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  60:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>
  64:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	50 6f       	ori	r21, 0xF0	; 240
  6a:	74 65       	ori	r23, 0x54	; 84
  6c:	6e 74       	andi	r22, 0x4E	; 78
  6e:	69 6f       	ori	r22, 0xF9	; 249
  70:	6d 65       	ori	r22, 0x5D	; 93
  72:	74 65       	ori	r23, 0x54	; 84
  74:	72 00       	.word	0x0072	; ????

00000076 <__c.2241>:
  76:	32 25 69 00                                         2%i.

0000007a <__c.2239>:
  7a:	20 20 00                                              .

0000007d <__c.2237>:
  7d:	20 20 20 00                                            .

00000081 <ssd1306_init_cmd>:
  81:	ae e3 20 00 b0 c8 00 10 40 a4 a1 a6 81 ff a8 3f     .. .....@......?
  91:	d3 00 d5 f0 d9 22 da 12 db 20 8d 14 af              ....."... ...

0000009e <font>:
	...
  a6:	7e 81 95 b1 b1 95 81 7e 7e ff eb cf cf eb ff 7e     ~......~~......~
  b6:	0e 1f 3f 7e 3f 1f 0e 00 08 1c 3e 7f 3e 1c 08 00     ..?~?.....>.>...
  c6:	38 3a 9f ff 9f 3a 38 00 10 38 bc ff bc 38 10 00     8:...:8..8...8..
	...
  f6:	70 f8 88 88 fd 7f 07 0f 00 4e 5f f1 f1 5f 4e 00     p........N_.._N.
	...
 10e:	c0 ff 7f 05 05 65 7f 3f 99 5a 3c e7 e7 3c 5a 99     .....e.?.Z<..<Z.
 11e:	7f 3e 3e 1c 1c 08 08 00 08 08 1c 1c 3e 3e 7f 00     .>>.........>>..
 12e:	00 24 66 ff ff 66 24 00 00 5f 5f 00 00 5f 5f 00     .$f..f$..__..__.
 13e:	06 0f 09 7f 7f 01 7f 7f da bf a5 a5 fd 59 03 02     .............Y..
 14e:	00 70 70 70 70 70 70 00 80 94 b6 ff ff b6 94 80     .pppppp.........
 15e:	00 04 06 7f 7f 06 04 00 00 10 30 7f 7f 30 10 00     ..........0..0..
 16e:	08 08 08 2a 3e 1c 08 00 08 1c 3e 2a 08 08 08 00     ...*>.....>*....
 17e:	3c 3c 20 20 20 20 20 00 08 1c 3e 08 08 3e 1c 08     <<     ...>..>..
 18e:	30 38 3c 3e 3e 3c 38 30 06 0e 1e 3e 3e 1e 0e 06     08<>><80...>>...
	...
 1a6:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
 1b6:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
 1c6:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
 1d6:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
 1e6:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
 1f6:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
 206:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
 216:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
 226:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
 236:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
 246:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
 256:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
 266:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
 276:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
 286:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
 296:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
 2a6:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
 2b6:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
 2c6:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
 2d6:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
 2e6:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
 2f6:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
 306:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
 316:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
 326:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
 336:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
 346:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
 356:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
 366:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
 376:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
 386:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
 396:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
 3a6:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
 3b6:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
 3c6:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
 3d6:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
 3e6:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
 3f6:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
 406:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
 416:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
 426:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
 436:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
 446:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
 456:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
 466:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
 476:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
 486:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
 496:	78 7c 46 43 46 7c 78 00 1e bf e1 61 33 12 00 00     x|FCF|x....a3...
 4a6:	3a 7a 40 40 7a 7a 40 00 38 7c 56 57 5d 18 00 00     :z@@zz@.8|VW]...
 4b6:	02 23 75 55 55 7d 7b 42 21 75 54 54 7d 79 40 00     .#uUU}{B!uTT}y@.
 4c6:	20 75 57 56 7c 78 40 00 00 22 77 55 55 7f 7a 40      uWV|x@.."wUU.z@
 4d6:	1c be e2 62 36 14 00 00 02 3b 7d 55 55 5d 1b 02     ...b6....;}UU]..
 4e6:	39 7d 54 54 5d 19 00 00 38 7d 57 56 5c 18 00 00     9}TT]...8}WV\...
 4f6:	01 45 7c 7c 41 01 00 00 02 03 45 7d 7d 43 02 00     .E||A.....E}}C..
 506:	00 45 7f 7e 40 00 00 00 79 7d 26 26 7d 79 00 00     .E.~@...y}&&}y..
 516:	70 7a 2d 2d 7a 70 00 00 44 7c 7e 57 55 44 00 00     pz--zp..D|~WUD..
 526:	20 74 54 54 7c 7c 54 54 7c 7e 0b 09 7f 7f 49 00      tTT||TT|~....I.
 536:	32 7b 49 49 7b 32 00 00 32 7a 48 48 7a 32 00 00     2{II{2..2zHHz2..
 546:	30 79 4b 4a 78 30 00 00 3a 7b 41 41 7b 7a 40 00     0yKJx0..:{AA{z@.
 556:	38 79 43 42 78 78 40 00 ba ba a0 a0 fa 7a 00 00     8yCBxx@......z..
 566:	39 7d 44 44 44 7d 39 00 3d 7d 40 40 7d 3d 00 00     9}DDD}9.=}@@}=..
 576:	38 7c 64 54 4c 7c 38 00 68 7e 7f 49 43 66 20 00     8|dTL|8.h~.ICf .
 586:	5c 3e 73 49 67 3e 1d 00 44 6c 38 38 6c 44 00 00     \>sIg>..Dl88lD..
 596:	40 c8 88 fe 7f 09 0b 02 20 74 56 57 7d 78 40 00     @....... tVW}x@.
 5a6:	00 44 7e 7f 41 00 00 00 30 78 48 4a 7b 31 00 00     .D~.A...0xHJ{1..
 5b6:	38 78 40 42 7b 79 40 00 7a 7b 09 0b 7a 73 01 00     8x@B{y@.z{..zs..
 5c6:	7a 7b 19 33 7a 7b 01 00 00 26 2f 29 2f 2f 28 00     z{.3z{...&/)//(.
 5d6:	00 26 2f 29 29 2f 26 00 30 78 4d 45 60 20 00 00     .&/))/&.0xME` ..
 5e6:	1c 22 7d 4b 5b 65 22 1c 08 08 08 08 38 38 00 00     ."}K[e".....88..
 5f6:	61 3f 1f cc ee ab b9 90 61 3f 1f 4c 66 73 d9 f8     a?......a?.Lfs..
 606:	00 00 60 fa fa 60 00 00 08 1c 36 22 08 1c 36 22     ..`..`....6"..6"
 616:	22 36 1c 08 22 36 1c 08 aa 00 55 00 aa 00 55 00     "6.."6....U...U.
 626:	aa 55 aa 55 aa 55 aa 55 55 ff aa ff 55 ff aa ff     .U.U.U.UU...U...
 636:	00 00 00 ff ff 00 00 00 10 10 10 ff ff 00 00 00     ................
 646:	70 78 2c 2e 7b 71 00 00 72 79 2d 2d 79 72 00 00     px,.{q..ry--yr..
 656:	71 7b 2e 2c 78 70 00 00 1c 22 5d 55 55 41 22 1c     q{.,xp..."]UUA".
 666:	14 14 f7 f7 00 ff ff 00 00 00 ff ff 00 ff ff 00     ................
 676:	14 14 f4 f4 04 fc fc 00 14 14 17 17 10 1f 1f 00     ................
 686:	18 3c 24 e7 e7 24 24 00 2b 2f fc fc 2f 2b 00 00     .<$..$$.+/../+..
 696:	10 10 10 f0 f0 00 00 00 00 00 00 1f 1f 10 10 10     ................
 6a6:	10 10 10 1f 1f 10 10 10 10 10 10 f0 f0 10 10 10     ................
 6b6:	00 00 00 ff ff 10 10 10 10 10 10 10 10 10 10 10     ................
 6c6:	10 10 10 ff ff 10 10 10 22 77 55 57 7e 7b 41 00     ........"wUW~{A.
 6d6:	72 7b 2d 2f 7a 73 01 00 00 00 1f 1f 10 17 17 14     r{-/zs..........
 6e6:	00 00 fc fc 04 f4 f4 14 14 14 17 17 10 17 17 14     ................
 6f6:	14 14 f4 f4 04 f4 f4 14 00 00 ff ff 00 f7 f7 14     ................
 706:	14 14 14 14 14 14 14 14 14 14 f7 f7 00 f7 f7 14     ................
 716:	66 3c 3c 24 3c 3c 66 00 05 27 72 57 7d 38 00 00     f<<$<<f..'rW}8..
 726:	49 7f 7f 49 63 7f 1c 00 46 7d 7d 55 55 46 00 00     I..Ic...F}}UUF..
 736:	45 7d 7c 54 55 45 00 00 44 7d 7f 56 54 44 00 00     E}|TUE..D}.VTD..
 746:	0a 0e 08 00 00 00 00 00 00 44 7e 7f 45 00 00 00     .........D~.E...
 756:	02 45 7d 7d 45 02 00 00 01 45 7c 7c 45 01 00 00     .E}}E....E||E...
 766:	10 10 10 1f 1f 00 00 00 00 00 00 f0 f0 10 10 10     ................
 776:	ff ff ff ff ff ff ff ff f0 f0 f0 f0 f0 f0 f0 f0     ................
 786:	00 00 00 77 77 00 00 00 00 45 7f 7e 44 00 00 00     ...ww....E.~D...
 796:	0f 0f 0f 0f 0f 0f 0f 0f 38 7c 46 47 45 7c 38 00     ........8|FGE|8.
 7a6:	fc fe 2a 2a 3e 14 00 00 3a 7d 45 45 45 7d 3a 00     ..**>...:}EEE}:.
 7b6:	38 7c 45 47 46 7c 38 00 32 7b 49 4b 7a 33 01 00     8|EGF|8.2{IKz3..
 7c6:	3a 7f 45 47 46 7f 39 00 80 fe 7e 20 20 3e 1e 00     :.EGF.9...~  >..
 7d6:	42 7e 7e 54 1c 08 00 00 41 7f 7f 55 14 1c 08 00     B~~T....A..U....
 7e6:	3c 7c 42 43 7d 3c 00 00 3a 79 41 41 79 3a 00 00     <|BC}<..:yAAy:..
 7f6:	3c 7d 43 42 7c 3c 00 00 b8 b8 a2 a3 f9 78 00 00     <}CB|<.......x..
 806:	0c 5c 72 73 5d 0c 00 00 02 02 02 02 02 02 00 00     .\rs]...........
 816:	00 00 02 03 01 00 00 00 10 10 10 10 10 10 00 00     ................
 826:	44 44 5f 5f 44 44 00 00 28 28 28 28 28 28 00 00     DD__DD..((((((..
 836:	71 35 1f 4c 66 73 d9 f8 06 0f 09 7f 7f 01 7f 7f     q5.Lfs..........
 846:	da bf a5 a5 fd 59 03 02 08 08 6b 6b 08 08 00 00     .....Y....kk....
 856:	00 80 c0 40 00 00 00 00 00 06 0f 09 0f 06 00 00     ...@............
 866:	02 02 00 00 02 02 00 00 00 00 00 10 10 00 00 00     ................
 876:	00 12 13 1f 1f 10 10 00 00 11 15 15 1f 1f 0a 00     ................
 886:	00 19 1d 15 17 12 00 00 00 00 3c 3c 3c 3c 00 00     ..........<<<<..
	...

0000089e <__ctors_end>:
 89e:	11 24       	eor	r1, r1
 8a0:	1f be       	out	0x3f, r1	; 63
 8a2:	cf ef       	ldi	r28, 0xFF	; 255
 8a4:	d8 e0       	ldi	r29, 0x08	; 8
 8a6:	de bf       	out	0x3e, r29	; 62
 8a8:	cd bf       	out	0x3d, r28	; 61

000008aa <__do_clear_bss>:
 8aa:	21 e0       	ldi	r18, 0x01	; 1
 8ac:	a0 e0       	ldi	r26, 0x00	; 0
 8ae:	b1 e0       	ldi	r27, 0x01	; 1
 8b0:	01 c0       	rjmp	.+2      	; 0x8b4 <.do_clear_bss_start>

000008b2 <.do_clear_bss_loop>:
 8b2:	1d 92       	st	X+, r1

000008b4 <.do_clear_bss_start>:
 8b4:	a5 30       	cpi	r26, 0x05	; 5
 8b6:	b2 07       	cpc	r27, r18
 8b8:	e1 f7       	brne	.-8      	; 0x8b2 <.do_clear_bss_loop>
 8ba:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <main>
 8be:	0c 94 ef 07 	jmp	0xfde	; 0xfde <_exit>

000008c2 <__bad_interrupt>:
 8c2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000008c6 <ADC_INIT>:

int ADC_VALUE;

void ADC_INIT()
{
	ADMUX	|= ((1<<MUX1)	|  (1<<MUX2));					//use ADC6
 8c6:	ec e7       	ldi	r30, 0x7C	; 124
 8c8:	f0 e0       	ldi	r31, 0x00	; 0
 8ca:	80 81       	ld	r24, Z
 8cc:	86 60       	ori	r24, 0x06	; 6
 8ce:	80 83       	st	Z, r24
	ADMUX	|= (1<<REFS0);									//Referenzspannung AVCC
 8d0:	80 81       	ld	r24, Z
 8d2:	80 64       	ori	r24, 0x40	; 64
 8d4:	80 83       	st	Z, r24
	ADCSRA  |= ((1<<ADPS0)  |  (1<<ADPS1)	|  (1<<ADPS2)); //Prescaler 128 --> Zeitdiskretisierung
 8d6:	ea e7       	ldi	r30, 0x7A	; 122
 8d8:	f0 e0       	ldi	r31, 0x00	; 0
 8da:	80 81       	ld	r24, Z
 8dc:	87 60       	ori	r24, 0x07	; 7
 8de:	80 83       	st	Z, r24
	ADCSRA  |= (1<<ADEN);									//Enable --> ADC einschalten
 8e0:	80 81       	ld	r24, Z
 8e2:	80 68       	ori	r24, 0x80	; 128
 8e4:	80 83       	st	Z, r24
	ADCSRA  |= (1<<ADSC);									//Start single conversion
 8e6:	80 81       	ld	r24, Z
 8e8:	80 64       	ori	r24, 0x40	; 64
 8ea:	80 83       	st	Z, r24
	
	while(ADCSRA & (1<<ADSC)) {};							//trash 1st value
 8ec:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 8f0:	86 fd       	sbrc	r24, 6
 8f2:	fc cf       	rjmp	.-8      	; 0x8ec <ADC_INIT+0x26>
}
 8f4:	08 95       	ret

000008f6 <GET_ADC_DATA>:

void GET_ADC_DATA()
{
	ADCSRA  |= (1<<ADSC);
 8f6:	ea e7       	ldi	r30, 0x7A	; 122
 8f8:	f0 e0       	ldi	r31, 0x00	; 0
 8fa:	80 81       	ld	r24, Z
 8fc:	80 64       	ori	r24, 0x40	; 64
 8fe:	80 83       	st	Z, r24
	while(ADCSRA & (1<<ADSC)) {};
 900:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 904:	86 fd       	sbrc	r24, 6
 906:	fc cf       	rjmp	.-8      	; 0x900 <__stack+0x1>
	ADC_VALUE = ADCW;
 908:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 90c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	ADC_VALUE = ADC_VALUE/10;
 910:	6a e0       	ldi	r22, 0x0A	; 10
 912:	70 e0       	ldi	r23, 0x00	; 0
 914:	0e 94 4f 07 	call	0xe9e	; 0xe9e <__divmodhi4>
	ADC_VALUE = 100-ADC_VALUE;
 918:	84 e6       	ldi	r24, 0x64	; 100
 91a:	90 e0       	ldi	r25, 0x00	; 0
 91c:	86 1b       	sub	r24, r22
 91e:	97 0b       	sbc	r25, r23
 920:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <ADC_VALUE+0x1>
 924:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <ADC_VALUE>
	if(ADC_VALUE<=9)					{oled_gotoxy(5,3);oled_write("   ");}
 928:	0a 97       	sbiw	r24, 0x0a	; 10
 92a:	64 f4       	brge	.+24     	; 0x944 <__stack+0x45>
 92c:	63 e0       	ldi	r22, 0x03	; 3
 92e:	85 e0       	ldi	r24, 0x05	; 5
 930:	0e 94 38 05 	call	0xa70	; 0xa70 <oled_gotoxy>
 934:	8d e7       	ldi	r24, 0x7D	; 125
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	9f 93       	push	r25
 93a:	8f 93       	push	r24
 93c:	0e 94 76 06 	call	0xcec	; 0xcec <oled_write_P>
 940:	0f 90       	pop	r0
 942:	0f 90       	pop	r0
	if((ADC_VALUE>9) && (ADC_VALUE<=99))	{oled_gotoxy(5,3);oled_write("  ");}
 944:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <ADC_VALUE>
 948:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <ADC_VALUE+0x1>
 94c:	0a 97       	sbiw	r24, 0x0a	; 10
 94e:	8a 35       	cpi	r24, 0x5A	; 90
 950:	91 05       	cpc	r25, r1
 952:	60 f4       	brcc	.+24     	; 0x96c <__stack+0x6d>
 954:	63 e0       	ldi	r22, 0x03	; 3
 956:	85 e0       	ldi	r24, 0x05	; 5
 958:	0e 94 38 05 	call	0xa70	; 0xa70 <oled_gotoxy>
 95c:	8a e7       	ldi	r24, 0x7A	; 122
 95e:	90 e0       	ldi	r25, 0x00	; 0
 960:	9f 93       	push	r25
 962:	8f 93       	push	r24
 964:	0e 94 76 06 	call	0xcec	; 0xcec <oled_write_P>
 968:	0f 90       	pop	r0
 96a:	0f 90       	pop	r0
	if(ADC_VALUE==100)					{oled_gotoxy(5,3);}	
 96c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <ADC_VALUE>
 970:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <ADC_VALUE+0x1>
 974:	84 36       	cpi	r24, 0x64	; 100
 976:	91 05       	cpc	r25, r1
 978:	21 f4       	brne	.+8      	; 0x982 <__stack+0x83>
 97a:	63 e0       	ldi	r22, 0x03	; 3
 97c:	85 e0       	ldi	r24, 0x05	; 5
 97e:	0e 94 38 05 	call	0xa70	; 0xa70 <oled_gotoxy>
	oled_write("2%i",ADC_VALUE);
 982:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <ADC_VALUE+0x1>
 986:	8f 93       	push	r24
 988:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <ADC_VALUE>
 98c:	8f 93       	push	r24
 98e:	86 e7       	ldi	r24, 0x76	; 118
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	9f 93       	push	r25
 994:	8f 93       	push	r24
 996:	0e 94 76 06 	call	0xcec	; 0xcec <oled_write_P>
	
	
}
 99a:	0f 90       	pop	r0
 99c:	0f 90       	pop	r0
 99e:	0f 90       	pop	r0
 9a0:	0f 90       	pop	r0
 9a2:	08 95       	ret

000009a4 <main>:
int main(void)
{
	
	ADC_INIT();
 9a4:	0e 94 63 04 	call	0x8c6	; 0x8c6 <ADC_INIT>
	oled_init();
 9a8:	0e 94 79 05 	call	0xaf2	; 0xaf2 <oled_init>
	oled_gotoxy(2,0);
 9ac:	60 e0       	ldi	r22, 0x00	; 0
 9ae:	82 e0       	ldi	r24, 0x02	; 2
 9b0:	0e 94 38 05 	call	0xa70	; 0xa70 <oled_gotoxy>
	oled_write("Potentiometer");
 9b4:	88 e6       	ldi	r24, 0x68	; 104
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	9f 93       	push	r25
 9ba:	8f 93       	push	r24
 9bc:	0e 94 76 06 	call	0xcec	; 0xcec <oled_write_P>
 9c0:	0f 90       	pop	r0
 9c2:	0f 90       	pop	r0
	
	
   
    while (1) 
    {
		GET_ADC_DATA();
 9c4:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <GET_ADC_DATA>
 9c8:	fd cf       	rjmp	.-6      	; 0x9c4 <main+0x20>

000009ca <i2c_init>:
    i2c_stop();			
}

//***************************************************************************************
void oled_font_size (uint8_t byte){
	font_size = byte;
 9ca:	88 b1       	in	r24, 0x08	; 8
 9cc:	80 63       	ori	r24, 0x30	; 48
 9ce:	88 b9       	out	0x08, r24	; 8
 9d0:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 9d4:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 9d8:	8c e0       	ldi	r24, 0x0C	; 12
 9da:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 9de:	2f ef       	ldi	r18, 0xFF	; 255
 9e0:	80 e7       	ldi	r24, 0x70	; 112
 9e2:	92 e0       	ldi	r25, 0x02	; 2
 9e4:	21 50       	subi	r18, 0x01	; 1
 9e6:	80 40       	sbci	r24, 0x00	; 0
 9e8:	90 40       	sbci	r25, 0x00	; 0
 9ea:	e1 f7       	brne	.-8      	; 0x9e4 <i2c_init+0x1a>
 9ec:	00 c0       	rjmp	.+0      	; 0x9ee <i2c_init+0x24>
 9ee:	00 00       	nop
 9f0:	08 95       	ret

000009f2 <i2c_start>:
 9f2:	84 ea       	ldi	r24, 0xA4	; 164
 9f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 9f8:	80 e0       	ldi	r24, 0x00	; 0
 9fa:	05 c0       	rjmp	.+10     	; 0xa06 <i2c_start+0x14>
 9fc:	91 e0       	ldi	r25, 0x01	; 1
 9fe:	98 0f       	add	r25, r24
 a00:	85 36       	cpi	r24, 0x65	; 101
 a02:	c0 f4       	brcc	.+48     	; 0xa34 <i2c_start+0x42>
 a04:	89 2f       	mov	r24, r25
 a06:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 a0a:	99 23       	and	r25, r25
 a0c:	bc f7       	brge	.-18     	; 0x9fc <i2c_start+0xa>
 a0e:	88 e7       	ldi	r24, 0x78	; 120
 a10:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 a14:	84 e8       	ldi	r24, 0x84	; 132
 a16:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 a1a:	80 e0       	ldi	r24, 0x00	; 0
 a1c:	05 c0       	rjmp	.+10     	; 0xa28 <i2c_start+0x36>
 a1e:	91 e0       	ldi	r25, 0x01	; 1
 a20:	98 0f       	add	r25, r24
 a22:	85 36       	cpi	r24, 0x65	; 101
 a24:	48 f4       	brcc	.+18     	; 0xa38 <i2c_start+0x46>
 a26:	89 2f       	mov	r24, r25
 a28:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 a2c:	99 23       	and	r25, r25
 a2e:	bc f7       	brge	.-18     	; 0xa1e <i2c_start+0x2c>
 a30:	80 e0       	ldi	r24, 0x00	; 0
 a32:	08 95       	ret
 a34:	81 e0       	ldi	r24, 0x01	; 1
 a36:	08 95       	ret
 a38:	81 e0       	ldi	r24, 0x01	; 1
 a3a:	08 95       	ret

00000a3c <i2c_byte>:
 a3c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 a40:	84 e8       	ldi	r24, 0x84	; 132
 a42:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 a46:	80 e0       	ldi	r24, 0x00	; 0
 a48:	05 c0       	rjmp	.+10     	; 0xa54 <i2c_byte+0x18>
 a4a:	91 e0       	ldi	r25, 0x01	; 1
 a4c:	98 0f       	add	r25, r24
 a4e:	85 36       	cpi	r24, 0x65	; 101
 a50:	38 f4       	brcc	.+14     	; 0xa60 <i2c_byte+0x24>
 a52:	89 2f       	mov	r24, r25
 a54:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 a58:	99 23       	and	r25, r25
 a5a:	bc f7       	brge	.-18     	; 0xa4a <i2c_byte+0xe>
 a5c:	80 e0       	ldi	r24, 0x00	; 0
 a5e:	08 95       	ret
 a60:	81 e0       	ldi	r24, 0x01	; 1
 a62:	08 95       	ret

00000a64 <i2c_stop>:
 a64:	ec eb       	ldi	r30, 0xBC	; 188
 a66:	f0 e0       	ldi	r31, 0x00	; 0
 a68:	84 e9       	ldi	r24, 0x94	; 148
 a6a:	80 83       	st	Z, r24
 a6c:	10 82       	st	Z, r1
 a6e:	08 95       	ret

00000a70 <oled_gotoxy>:
 a70:	cf 93       	push	r28
 a72:	df 93       	push	r29
 a74:	c8 2f       	mov	r28, r24
 a76:	d6 2f       	mov	r29, r22
 a78:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <oled_x>
 a7c:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <oled_y>
 a80:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <i2c_start>
 a84:	80 e0       	ldi	r24, 0x00	; 0
 a86:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
 a8a:	8d 2f       	mov	r24, r29
 a8c:	80 6b       	ori	r24, 0xB0	; 176
 a8e:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
 a92:	81 e2       	ldi	r24, 0x21	; 33
 a94:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
 a98:	8c 2f       	mov	r24, r28
 a9a:	88 0f       	add	r24, r24
 a9c:	88 0f       	add	r24, r24
 a9e:	88 0f       	add	r24, r24
 aa0:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
 aa4:	8f e7       	ldi	r24, 0x7F	; 127
 aa6:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
 aaa:	0e 94 32 05 	call	0xa64	; 0xa64 <i2c_stop>
 aae:	df 91       	pop	r29
 ab0:	cf 91       	pop	r28
 ab2:	08 95       	ret

00000ab4 <oled_clear_screen>:
 ab4:	cf 93       	push	r28
 ab6:	df 93       	push	r29
 ab8:	60 e0       	ldi	r22, 0x00	; 0
 aba:	80 e0       	ldi	r24, 0x00	; 0
 abc:	0e 94 38 05 	call	0xa70	; 0xa70 <oled_gotoxy>
 ac0:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <i2c_start>
 ac4:	80 e4       	ldi	r24, 0x40	; 64
 ac6:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
 aca:	c0 e0       	ldi	r28, 0x00	; 0
 acc:	d0 e0       	ldi	r29, 0x00	; 0
 ace:	04 c0       	rjmp	.+8      	; 0xad8 <oled_clear_screen+0x24>
 ad0:	80 e0       	ldi	r24, 0x00	; 0
 ad2:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
 ad6:	21 96       	adiw	r28, 0x01	; 1
 ad8:	c1 15       	cp	r28, r1
 ada:	88 e0       	ldi	r24, 0x08	; 8
 adc:	d8 07       	cpc	r29, r24
 ade:	c0 f3       	brcs	.-16     	; 0xad0 <oled_clear_screen+0x1c>
 ae0:	0e 94 32 05 	call	0xa64	; 0xa64 <i2c_stop>
 ae4:	60 e0       	ldi	r22, 0x00	; 0
 ae6:	80 e0       	ldi	r24, 0x00	; 0
 ae8:	0e 94 38 05 	call	0xa70	; 0xa70 <oled_gotoxy>
 aec:	df 91       	pop	r29
 aee:	cf 91       	pop	r28
 af0:	08 95       	ret

00000af2 <oled_init>:
 af2:	cf 93       	push	r28
 af4:	0e 94 e5 04 	call	0x9ca	; 0x9ca <i2c_init>
 af8:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <i2c_start>
 afc:	80 e0       	ldi	r24, 0x00	; 0
 afe:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
 b02:	c0 e0       	ldi	r28, 0x00	; 0
 b04:	08 c0       	rjmp	.+16     	; 0xb16 <oled_init+0x24>
 b06:	ec 2f       	mov	r30, r28
 b08:	f0 e0       	ldi	r31, 0x00	; 0
 b0a:	ef 57       	subi	r30, 0x7F	; 127
 b0c:	ff 4f       	sbci	r31, 0xFF	; 255
 b0e:	84 91       	lpm	r24, Z
 b10:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
 b14:	cf 5f       	subi	r28, 0xFF	; 255
 b16:	cd 31       	cpi	r28, 0x1D	; 29
 b18:	b0 f3       	brcs	.-20     	; 0xb06 <oled_init+0x14>
 b1a:	0e 94 32 05 	call	0xa64	; 0xa64 <i2c_stop>
 b1e:	0e 94 5a 05 	call	0xab4	; 0xab4 <oled_clear_screen>
 b22:	cf 91       	pop	r28
 b24:	08 95       	ret

00000b26 <oled_write_char>:
}

//***************************************************************************************
void oled_write_char (char c){
 b26:	df 92       	push	r13
 b28:	ef 92       	push	r14
 b2a:	ff 92       	push	r15
 b2c:	0f 93       	push	r16
 b2e:	1f 93       	push	r17
 b30:	cf 93       	push	r28
 b32:	df 93       	push	r29
 b34:	08 2f       	mov	r16, r24
	if(font_size != 0){		
 b36:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b3a:	88 23       	and	r24, r24
 b3c:	09 f4       	brne	.+2      	; 0xb40 <oled_write_char+0x1a>
 b3e:	9b c0       	rjmp	.+310    	; 0xc76 <oled_write_char+0x150>
		uint8_t tmp = 0;
		oled_gotoxy(oled_x,oled_y);
 b40:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <oled_y>
 b44:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <oled_x>
 b48:	0e 94 38 05 	call	0xa70	; 0xa70 <oled_gotoxy>
		i2c_start();
 b4c:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <i2c_start>
		i2c_byte(DATA);
 b50:	80 e4       	ldi	r24, 0x40	; 64
 b52:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
		for (uint8_t count = 0; count < 8; count++){
 b56:	10 e0       	ldi	r17, 0x00	; 0
 b58:	35 c0       	rjmp	.+106    	; 0xbc4 <oled_write_char+0x9e>
			tmp = pgm_read_byte(&font[(unsigned char)c][count]);
 b5a:	e0 2f       	mov	r30, r16
 b5c:	f0 e0       	ldi	r31, 0x00	; 0
 b5e:	ee 0f       	add	r30, r30
 b60:	ff 1f       	adc	r31, r31
 b62:	ee 0f       	add	r30, r30
 b64:	ff 1f       	adc	r31, r31
 b66:	ee 0f       	add	r30, r30
 b68:	ff 1f       	adc	r31, r31
 b6a:	e1 0f       	add	r30, r17
 b6c:	f1 1d       	adc	r31, r1
 b6e:	e2 56       	subi	r30, 0x62	; 98
 b70:	ff 4f       	sbci	r31, 0xFF	; 255
 b72:	84 91       	lpm	r24, Z
			tmp = tmp & 0x0f;
			tmp = ((tmp&0x01)*3)+(((tmp&0x02)<<1)*3)+(((tmp&0x04)<<2)*3)+(((tmp&0x08)<<3)*3);
 b74:	80 fb       	bst	r24, 0
 b76:	ee 24       	eor	r14, r14
 b78:	e0 f8       	bld	r14, 0
 b7a:	f1 2c       	mov	r15, r1
 b7c:	e8 2f       	mov	r30, r24
 b7e:	e2 70       	andi	r30, 0x02	; 2
 b80:	f0 e0       	ldi	r31, 0x00	; 0
 b82:	ee 0f       	add	r30, r30
 b84:	ff 1f       	adc	r31, r31
 b86:	ee 0d       	add	r30, r14
 b88:	ff 1d       	adc	r31, r15
 b8a:	28 2f       	mov	r18, r24
 b8c:	24 70       	andi	r18, 0x04	; 4
 b8e:	30 e0       	ldi	r19, 0x00	; 0
 b90:	22 0f       	add	r18, r18
 b92:	33 1f       	adc	r19, r19
 b94:	22 0f       	add	r18, r18
 b96:	33 1f       	adc	r19, r19
 b98:	e2 0f       	add	r30, r18
 b9a:	f3 1f       	adc	r31, r19
 b9c:	88 70       	andi	r24, 0x08	; 8
 b9e:	90 e0       	ldi	r25, 0x00	; 0
 ba0:	88 0f       	add	r24, r24
 ba2:	99 1f       	adc	r25, r25
 ba4:	88 0f       	add	r24, r24
 ba6:	99 1f       	adc	r25, r25
 ba8:	88 0f       	add	r24, r24
 baa:	99 1f       	adc	r25, r25
 bac:	e8 0f       	add	r30, r24
 bae:	f9 1f       	adc	r31, r25
 bb0:	de 2e       	mov	r13, r30
 bb2:	dd 0c       	add	r13, r13
 bb4:	de 0e       	add	r13, r30
			i2c_byte(tmp);
 bb6:	8d 2d       	mov	r24, r13
 bb8:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
			i2c_byte(tmp);
 bbc:	8d 2d       	mov	r24, r13
 bbe:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
	if(font_size != 0){		
		uint8_t tmp = 0;
		oled_gotoxy(oled_x,oled_y);
		i2c_start();
		i2c_byte(DATA);
		for (uint8_t count = 0; count < 8; count++){
 bc2:	1f 5f       	subi	r17, 0xFF	; 255
 bc4:	18 30       	cpi	r17, 0x08	; 8
 bc6:	48 f2       	brcs	.-110    	; 0xb5a <oled_write_char+0x34>
			tmp = tmp & 0x0f;
			tmp = ((tmp&0x01)*3)+(((tmp&0x02)<<1)*3)+(((tmp&0x04)<<2)*3)+(((tmp&0x08)<<3)*3);
			i2c_byte(tmp);
			i2c_byte(tmp);
		}
		i2c_stop();
 bc8:	0e 94 32 05 	call	0xa64	; 0xa64 <i2c_stop>
		oled_gotoxy(oled_x,oled_y + 1);
 bcc:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <oled_y>
 bd0:	6f 5f       	subi	r22, 0xFF	; 255
 bd2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <oled_x>
 bd6:	0e 94 38 05 	call	0xa70	; 0xa70 <oled_gotoxy>
		i2c_start();
 bda:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <i2c_start>
		i2c_byte(DATA);
 bde:	80 e4       	ldi	r24, 0x40	; 64
 be0:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
		for (uint8_t count = 0; count < 8; count++){
 be4:	10 e0       	ldi	r17, 0x00	; 0
 be6:	38 c0       	rjmp	.+112    	; 0xc58 <oled_write_char+0x132>
			tmp = pgm_read_byte(&font[(unsigned char)c][count]);
 be8:	e0 2f       	mov	r30, r16
 bea:	f0 e0       	ldi	r31, 0x00	; 0
 bec:	ee 0f       	add	r30, r30
 bee:	ff 1f       	adc	r31, r31
 bf0:	ee 0f       	add	r30, r30
 bf2:	ff 1f       	adc	r31, r31
 bf4:	ee 0f       	add	r30, r30
 bf6:	ff 1f       	adc	r31, r31
 bf8:	e1 0f       	add	r30, r17
 bfa:	f1 1d       	adc	r31, r1
 bfc:	e2 56       	subi	r30, 0x62	; 98
 bfe:	ff 4f       	sbci	r31, 0xFF	; 255
 c00:	24 91       	lpm	r18, Z
			tmp = (tmp & 0xf0)>>4;
 c02:	22 95       	swap	r18
 c04:	2f 70       	andi	r18, 0x0F	; 15
			tmp = ((tmp&0x01)*3)+(((tmp&0x02)<<1)*3)+(((tmp&0x04)<<2)*3)+(((tmp&0x08)<<3)*3);
 c06:	82 2f       	mov	r24, r18
 c08:	81 70       	andi	r24, 0x01	; 1
 c0a:	c8 2f       	mov	r28, r24
 c0c:	80 e0       	ldi	r24, 0x00	; 0
 c0e:	d8 2f       	mov	r29, r24
 c10:	82 2f       	mov	r24, r18
 c12:	82 70       	andi	r24, 0x02	; 2
 c14:	90 e0       	ldi	r25, 0x00	; 0
 c16:	88 0f       	add	r24, r24
 c18:	99 1f       	adc	r25, r25
 c1a:	8c 0f       	add	r24, r28
 c1c:	9d 1f       	adc	r25, r29
 c1e:	42 2f       	mov	r20, r18
 c20:	44 70       	andi	r20, 0x04	; 4
 c22:	50 e0       	ldi	r21, 0x00	; 0
 c24:	44 0f       	add	r20, r20
 c26:	55 1f       	adc	r21, r21
 c28:	44 0f       	add	r20, r20
 c2a:	55 1f       	adc	r21, r21
 c2c:	84 0f       	add	r24, r20
 c2e:	95 1f       	adc	r25, r21
 c30:	28 70       	andi	r18, 0x08	; 8
 c32:	30 e0       	ldi	r19, 0x00	; 0
 c34:	22 0f       	add	r18, r18
 c36:	33 1f       	adc	r19, r19
 c38:	22 0f       	add	r18, r18
 c3a:	33 1f       	adc	r19, r19
 c3c:	22 0f       	add	r18, r18
 c3e:	33 1f       	adc	r19, r19
 c40:	82 0f       	add	r24, r18
 c42:	93 1f       	adc	r25, r19
 c44:	f8 2e       	mov	r15, r24
 c46:	ff 0c       	add	r15, r15
 c48:	f8 0e       	add	r15, r24
			i2c_byte(tmp);
 c4a:	8f 2d       	mov	r24, r15
 c4c:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
			i2c_byte(tmp);
 c50:	8f 2d       	mov	r24, r15
 c52:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
		}
		i2c_stop();
		oled_gotoxy(oled_x,oled_y + 1);
		i2c_start();
		i2c_byte(DATA);
		for (uint8_t count = 0; count < 8; count++){
 c56:	1f 5f       	subi	r17, 0xFF	; 255
 c58:	18 30       	cpi	r17, 0x08	; 8
 c5a:	30 f2       	brcs	.-116    	; 0xbe8 <oled_write_char+0xc2>
			tmp = (tmp & 0xf0)>>4;
			tmp = ((tmp&0x01)*3)+(((tmp&0x02)<<1)*3)+(((tmp&0x04)<<2)*3)+(((tmp&0x08)<<3)*3);
			i2c_byte(tmp);
			i2c_byte(tmp);
		}
		i2c_stop();
 c5c:	0e 94 32 05 	call	0xa64	; 0xa64 <i2c_stop>
		oled_x +=2;
 c60:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <oled_x>
 c64:	8e 5f       	subi	r24, 0xFE	; 254
 c66:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <oled_x>
		oled_y -=1;
 c6a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <oled_y>
 c6e:	81 50       	subi	r24, 0x01	; 1
 c70:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <oled_y>
 c74:	26 c0       	rjmp	.+76     	; 0xcc2 <oled_write_char+0x19c>
	}else{
		oled_gotoxy(oled_x,oled_y);
 c76:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <oled_y>
 c7a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <oled_x>
 c7e:	0e 94 38 05 	call	0xa70	; 0xa70 <oled_gotoxy>
		i2c_start();
 c82:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <i2c_start>
		i2c_byte(DATA);
 c86:	80 e4       	ldi	r24, 0x40	; 64
 c88:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
		for (uint8_t count = 0; count < 8; count++){
 c8c:	c0 e0       	ldi	r28, 0x00	; 0
 c8e:	10 c0       	rjmp	.+32     	; 0xcb0 <oled_write_char+0x18a>
			i2c_byte(pgm_read_byte(&font[(unsigned char)c][count]));
 c90:	e0 2f       	mov	r30, r16
 c92:	f0 e0       	ldi	r31, 0x00	; 0
 c94:	ee 0f       	add	r30, r30
 c96:	ff 1f       	adc	r31, r31
 c98:	ee 0f       	add	r30, r30
 c9a:	ff 1f       	adc	r31, r31
 c9c:	ee 0f       	add	r30, r30
 c9e:	ff 1f       	adc	r31, r31
 ca0:	ec 0f       	add	r30, r28
 ca2:	f1 1d       	adc	r31, r1
 ca4:	e2 56       	subi	r30, 0x62	; 98
 ca6:	ff 4f       	sbci	r31, 0xFF	; 255
 ca8:	84 91       	lpm	r24, Z
 caa:	0e 94 1e 05 	call	0xa3c	; 0xa3c <i2c_byte>
		oled_y -=1;
	}else{
		oled_gotoxy(oled_x,oled_y);
		i2c_start();
		i2c_byte(DATA);
		for (uint8_t count = 0; count < 8; count++){
 cae:	cf 5f       	subi	r28, 0xFF	; 255
 cb0:	c8 30       	cpi	r28, 0x08	; 8
 cb2:	70 f3       	brcs	.-36     	; 0xc90 <oled_write_char+0x16a>
			i2c_byte(pgm_read_byte(&font[(unsigned char)c][count]));
		}
		i2c_stop();
 cb4:	0e 94 32 05 	call	0xa64	; 0xa64 <i2c_stop>
		oled_x +=1;
 cb8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <oled_x>
 cbc:	8f 5f       	subi	r24, 0xFF	; 255
 cbe:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <oled_x>
	}
}
 cc2:	df 91       	pop	r29
 cc4:	cf 91       	pop	r28
 cc6:	1f 91       	pop	r17
 cc8:	0f 91       	pop	r16
 cca:	ff 90       	pop	r15
 ccc:	ef 90       	pop	r14
 cce:	df 90       	pop	r13
 cd0:	08 95       	ret

00000cd2 <oled_write_str>:

//***************************************************************************************
void oled_write_str (char* str){
 cd2:	cf 93       	push	r28
 cd4:	df 93       	push	r29
 cd6:	ec 01       	movw	r28, r24
    while (*str) {
 cd8:	03 c0       	rjmp	.+6      	; 0xce0 <oled_write_str+0xe>
        oled_write_char(*str++);
 cda:	21 96       	adiw	r28, 0x01	; 1
 cdc:	0e 94 93 05 	call	0xb26	; 0xb26 <oled_write_char>
	}
}

//***************************************************************************************
void oled_write_str (char* str){
    while (*str) {
 ce0:	88 81       	ld	r24, Y
 ce2:	81 11       	cpse	r24, r1
 ce4:	fa cf       	rjmp	.-12     	; 0xcda <oled_write_str+0x8>
        oled_write_char(*str++);
    }
}
 ce6:	df 91       	pop	r29
 ce8:	cf 91       	pop	r28
 cea:	08 95       	ret

00000cec <oled_write_P>:

//***************************************************************************************
void oled_write_P (const char *Buffer,...)
{
 cec:	8f 92       	push	r8
 cee:	9f 92       	push	r9
 cf0:	af 92       	push	r10
 cf2:	bf 92       	push	r11
 cf4:	df 92       	push	r13
 cf6:	ef 92       	push	r14
 cf8:	ff 92       	push	r15
 cfa:	0f 93       	push	r16
 cfc:	1f 93       	push	r17
 cfe:	cf 93       	push	r28
 d00:	df 93       	push	r29
 d02:	cd b7       	in	r28, 0x3d	; 61
 d04:	de b7       	in	r29, 0x3e	; 62
 d06:	64 97       	sbiw	r28, 0x14	; 20
 d08:	0f b6       	in	r0, 0x3f	; 63
 d0a:	f8 94       	cli
 d0c:	de bf       	out	0x3e, r29	; 62
 d0e:	0f be       	out	0x3f, r0	; 63
 d10:	cd bf       	out	0x3d, r28	; 61
 d12:	fe 01       	movw	r30, r28
 d14:	b2 96       	adiw	r30, 0x22	; 34
 d16:	01 91       	ld	r16, Z+
 d18:	11 91       	ld	r17, Z+
	va_list ap;
	va_start (ap, Buffer);	
 d1a:	5f 01       	movw	r10, r30
	
	int format_flag;
	char str_buffer[10];
	char str_null_buffer[10];
	char move = 0;
 d1c:	d1 2c       	mov	r13, r1
	char by;
	char *ptr;
		
	//Ausgabe der Zeichen
    for(;;){
		by = pgm_read_byte(Buffer++);
 d1e:	78 01       	movw	r14, r16
 d20:	8f ef       	ldi	r24, 0xFF	; 255
 d22:	e8 1a       	sub	r14, r24
 d24:	f8 0a       	sbc	r15, r24
 d26:	f8 01       	movw	r30, r16
 d28:	84 91       	lpm	r24, Z
		if(by==0) break; // end of format string
 d2a:	88 23       	and	r24, r24
 d2c:	09 f4       	brne	.+2      	; 0xd30 <oled_write_P+0x44>
 d2e:	a5 c0       	rjmp	.+330    	; 0xe7a <oled_write_P+0x18e>
            
		if (by == '%'){
 d30:	85 32       	cpi	r24, 0x25	; 37
 d32:	09 f0       	breq	.+2      	; 0xd36 <oled_write_P+0x4a>
 d34:	9e c0       	rjmp	.+316    	; 0xe72 <oled_write_P+0x186>
            by = pgm_read_byte(Buffer++);
 d36:	48 01       	movw	r8, r16
 d38:	f2 e0       	ldi	r31, 0x02	; 2
 d3a:	8f 0e       	add	r8, r31
 d3c:	91 1c       	adc	r9, r1
 d3e:	f7 01       	movw	r30, r14
 d40:	84 91       	lpm	r24, Z
			if (isdigit(by)>0){                   
 d42:	28 2f       	mov	r18, r24
 d44:	30 e0       	ldi	r19, 0x00	; 0
 d46:	20 53       	subi	r18, 0x30	; 48
 d48:	31 09       	sbc	r19, r1
 d4a:	2a 30       	cpi	r18, 0x0A	; 10
 d4c:	31 05       	cpc	r19, r1
 d4e:	60 f4       	brcc	.+24     	; 0xd68 <oled_write_P+0x7c>
 				str_null_buffer[0] = by;
 d50:	8b 87       	std	Y+11, r24	; 0x0b
				str_null_buffer[1] = '\0';
 d52:	1c 86       	std	Y+12, r1	; 0x0c
				move = atoi(str_null_buffer);
 d54:	ce 01       	movw	r24, r28
 d56:	0b 96       	adiw	r24, 0x0b	; 11
 d58:	0e 94 77 07 	call	0xeee	; 0xeee <atoi>
 d5c:	d8 2e       	mov	r13, r24
                by = pgm_read_byte(Buffer++);
 d5e:	0d 5f       	subi	r16, 0xFD	; 253
 d60:	1f 4f       	sbci	r17, 0xFF	; 255
 d62:	f4 01       	movw	r30, r8
 d64:	84 91       	lpm	r24, Z
 d66:	01 c0       	rjmp	.+2      	; 0xd6a <oled_write_P+0x7e>
    for(;;){
		by = pgm_read_byte(Buffer++);
		if(by==0) break; // end of format string
            
		if (by == '%'){
            by = pgm_read_byte(Buffer++);
 d68:	84 01       	movw	r16, r8
				str_null_buffer[1] = '\0';
				move = atoi(str_null_buffer);
                by = pgm_read_byte(Buffer++);
				}

			switch (by){
 d6a:	89 36       	cpi	r24, 0x69	; 105
 d6c:	81 f1       	breq	.+96     	; 0xdce <oled_write_P+0xe2>
 d6e:	28 f4       	brcc	.+10     	; 0xd7a <oled_write_P+0x8e>
 d70:	82 36       	cpi	r24, 0x62	; 98
 d72:	51 f0       	breq	.+20     	; 0xd88 <oled_write_P+0x9c>
 d74:	83 36       	cpi	r24, 0x63	; 99
 d76:	e9 f0       	breq	.+58     	; 0xdb2 <oled_write_P+0xc6>
 d78:	d2 cf       	rjmp	.-92     	; 0xd1e <oled_write_P+0x32>
 d7a:	83 37       	cpi	r24, 0x73	; 115
 d7c:	39 f0       	breq	.+14     	; 0xd8c <oled_write_P+0xa0>
 d7e:	88 37       	cpi	r24, 0x78	; 120
 d80:	21 f1       	breq	.+72     	; 0xdca <oled_write_P+0xde>
 d82:	8f 36       	cpi	r24, 0x6F	; 111
 d84:	61 f6       	brne	.-104    	; 0xd1e <oled_write_P+0x32>
 d86:	1f c0       	rjmp	.+62     	; 0xdc6 <oled_write_P+0xda>
                case 's':
                    ptr = va_arg(ap,char *);
                    while(*ptr) { oled_write_char(*ptr++); }
                    break;
				case 'b':
					Base = 2;
 d88:	42 e0       	ldi	r20, 0x02	; 2
 d8a:	22 c0       	rjmp	.+68     	; 0xdd0 <oled_write_P+0xe4>
                by = pgm_read_byte(Buffer++);
				}

			switch (by){
                case 's':
                    ptr = va_arg(ap,char *);
 d8c:	45 01       	movw	r8, r10
 d8e:	f2 e0       	ldi	r31, 0x02	; 2
 d90:	8f 0e       	add	r8, r31
 d92:	91 1c       	adc	r9, r1
 d94:	f5 01       	movw	r30, r10
 d96:	e0 80       	ld	r14, Z
 d98:	f1 80       	ldd	r15, Z+1	; 0x01
                    while(*ptr) { oled_write_char(*ptr++); }
 d9a:	05 c0       	rjmp	.+10     	; 0xda6 <oled_write_P+0xba>
 d9c:	ff ef       	ldi	r31, 0xFF	; 255
 d9e:	ef 1a       	sub	r14, r31
 da0:	ff 0a       	sbc	r15, r31
 da2:	0e 94 93 05 	call	0xb26	; 0xb26 <oled_write_char>
 da6:	f7 01       	movw	r30, r14
 da8:	80 81       	ld	r24, Z
 daa:	81 11       	cpse	r24, r1
 dac:	f7 cf       	rjmp	.-18     	; 0xd9c <oled_write_P+0xb0>
                by = pgm_read_byte(Buffer++);
				}

			switch (by){
                case 's':
                    ptr = va_arg(ap,char *);
 dae:	54 01       	movw	r10, r8
 db0:	b6 cf       	rjmp	.-148    	; 0xd1e <oled_write_P+0x32>
				case 'b':
					Base = 2;
					goto ConversionLoop;
				case 'c':
					//Int to char
					format_flag = va_arg(ap,int);
 db2:	75 01       	movw	r14, r10
 db4:	f2 e0       	ldi	r31, 0x02	; 2
 db6:	ef 0e       	add	r14, r31
 db8:	f1 1c       	adc	r15, r1
					oled_write_char (format_flag++);
 dba:	f5 01       	movw	r30, r10
 dbc:	80 81       	ld	r24, Z
 dbe:	0e 94 93 05 	call	0xb26	; 0xb26 <oled_write_char>
				case 'b':
					Base = 2;
					goto ConversionLoop;
				case 'c':
					//Int to char
					format_flag = va_arg(ap,int);
 dc2:	57 01       	movw	r10, r14
					oled_write_char (format_flag++);
					break;
 dc4:	ac cf       	rjmp	.-168    	; 0xd1e <oled_write_P+0x32>
				case 'i':
					Base = 10;
					goto ConversionLoop;
				case 'o':
					Base = 8;
 dc6:	48 e0       	ldi	r20, 0x08	; 8
					goto ConversionLoop;
 dc8:	03 c0       	rjmp	.+6      	; 0xdd0 <oled_write_P+0xe4>
				case 'x':
					Base = 16;
 dca:	40 e1       	ldi	r20, 0x10	; 16
 dcc:	01 c0       	rjmp	.+2      	; 0xdd0 <oled_write_P+0xe4>
					//Int to char
					format_flag = va_arg(ap,int);
					oled_write_char (format_flag++);
					break;
				case 'i':
					Base = 10;
 dce:	4a e0       	ldi	r20, 0x0A	; 10
				case 'x':
					Base = 16;
					//****************************
					ConversionLoop:
					//****************************
					itoa(va_arg(ap,int),str_buffer,Base);
 dd0:	50 e0       	ldi	r21, 0x00	; 0
 dd2:	75 01       	movw	r14, r10
 dd4:	f2 e0       	ldi	r31, 0x02	; 2
 dd6:	ef 0e       	add	r14, r31
 dd8:	f1 1c       	adc	r15, r1
extern __inline__ __ATTR_GNU_INLINE__
char *itoa (int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__itoa (int, char *, int);
	return __itoa (__val, __s, __radix);
 dda:	be 01       	movw	r22, r28
 ddc:	6f 5f       	subi	r22, 0xFF	; 255
 dde:	7f 4f       	sbci	r23, 0xFF	; 255
 de0:	f5 01       	movw	r30, r10
 de2:	80 81       	ld	r24, Z
 de4:	91 81       	ldd	r25, Z+1	; 0x01
 de6:	0e 94 a7 07 	call	0xf4e	; 0xf4e <itoa>
					int b=0;
 dea:	80 e0       	ldi	r24, 0x00	; 0
 dec:	90 e0       	ldi	r25, 0x00	; 0
					while (str_buffer[b++] != 0){};
 dee:	01 c0       	rjmp	.+2      	; 0xdf2 <oled_write_P+0x106>
 df0:	ca 01       	movw	r24, r20
 df2:	ac 01       	movw	r20, r24
 df4:	4f 5f       	subi	r20, 0xFF	; 255
 df6:	5f 4f       	sbci	r21, 0xFF	; 255
 df8:	e1 e0       	ldi	r30, 0x01	; 1
 dfa:	f0 e0       	ldi	r31, 0x00	; 0
 dfc:	ec 0f       	add	r30, r28
 dfe:	fd 1f       	adc	r31, r29
 e00:	e8 0f       	add	r30, r24
 e02:	f9 1f       	adc	r31, r25
 e04:	20 81       	ld	r18, Z
 e06:	21 11       	cpse	r18, r1
 e08:	f3 cf       	rjmp	.-26     	; 0xdf0 <oled_write_P+0x104>
					b--;
					if (b<move){
 e0a:	2d 2d       	mov	r18, r13
 e0c:	30 e0       	ldi	r19, 0x00	; 0
 e0e:	82 17       	cp	r24, r18
 e10:	93 07       	cpc	r25, r19
 e12:	44 f5       	brge	.+80     	; 0xe64 <oled_write_P+0x178>
						move -=b;
 e14:	d8 1a       	sub	r13, r24
						for (tmp = 0;tmp<move;tmp++){
 e16:	20 e0       	ldi	r18, 0x00	; 0
 e18:	30 e0       	ldi	r19, 0x00	; 0
 e1a:	0a c0       	rjmp	.+20     	; 0xe30 <oled_write_P+0x144>
							str_null_buffer[tmp] = '0';
 e1c:	eb e0       	ldi	r30, 0x0B	; 11
 e1e:	f0 e0       	ldi	r31, 0x00	; 0
 e20:	ec 0f       	add	r30, r28
 e22:	fd 1f       	adc	r31, r29
 e24:	e2 0f       	add	r30, r18
 e26:	f3 1f       	adc	r31, r19
 e28:	80 e3       	ldi	r24, 0x30	; 48
 e2a:	80 83       	st	Z, r24
					int b=0;
					while (str_buffer[b++] != 0){};
					b--;
					if (b<move){
						move -=b;
						for (tmp = 0;tmp<move;tmp++){
 e2c:	2f 5f       	subi	r18, 0xFF	; 255
 e2e:	3f 4f       	sbci	r19, 0xFF	; 255
 e30:	8d 2d       	mov	r24, r13
 e32:	90 e0       	ldi	r25, 0x00	; 0
 e34:	28 17       	cp	r18, r24
 e36:	39 07       	cpc	r19, r25
 e38:	8c f3       	brlt	.-30     	; 0xe1c <oled_write_P+0x130>
							str_null_buffer[tmp] = '0';
							}
						//tmp ++;
						str_null_buffer[tmp] = '\0';
 e3a:	eb e0       	ldi	r30, 0x0B	; 11
 e3c:	f0 e0       	ldi	r31, 0x00	; 0
 e3e:	ec 0f       	add	r30, r28
 e40:	fd 1f       	adc	r31, r29
 e42:	e2 0f       	add	r30, r18
 e44:	f3 1f       	adc	r31, r19
 e46:	10 82       	st	Z, r1
						strcat(str_null_buffer,str_buffer);
 e48:	be 01       	movw	r22, r28
 e4a:	6f 5f       	subi	r22, 0xFF	; 255
 e4c:	7f 4f       	sbci	r23, 0xFF	; 255
 e4e:	ce 01       	movw	r24, r28
 e50:	0b 96       	adiw	r24, 0x0b	; 11
 e52:	0e 94 95 07 	call	0xf2a	; 0xf2a <strcat>
						strcpy(str_buffer,str_null_buffer);
 e56:	be 01       	movw	r22, r28
 e58:	65 5f       	subi	r22, 0xF5	; 245
 e5a:	7f 4f       	sbci	r23, 0xFF	; 255
 e5c:	ce 01       	movw	r24, r28
 e5e:	01 96       	adiw	r24, 0x01	; 1
 e60:	0e 94 a0 07 	call	0xf40	; 0xf40 <strcpy>
						}
					oled_write_str (str_buffer);
 e64:	ce 01       	movw	r24, r28
 e66:	01 96       	adiw	r24, 0x01	; 1
 e68:	0e 94 69 06 	call	0xcd2	; 0xcd2 <oled_write_str>
				case 'x':
					Base = 16;
					//****************************
					ConversionLoop:
					//****************************
					itoa(va_arg(ap,int),str_buffer,Base);
 e6c:	57 01       	movw	r10, r14
						str_null_buffer[tmp] = '\0';
						strcat(str_null_buffer,str_buffer);
						strcpy(str_buffer,str_null_buffer);
						}
					oled_write_str (str_buffer);
					move =0;
 e6e:	d1 2c       	mov	r13, r1
					break;
 e70:	56 cf       	rjmp	.-340    	; 0xd1e <oled_write_P+0x32>
				}
		}else{
			oled_write_char (by);	
 e72:	0e 94 93 05 	call	0xb26	; 0xb26 <oled_write_char>
	char by;
	char *ptr;
		
	//Ausgabe der Zeichen
    for(;;){
		by = pgm_read_byte(Buffer++);
 e76:	87 01       	movw	r16, r14
 e78:	52 cf       	rjmp	.-348    	; 0xd1e <oled_write_P+0x32>
		}else{
			oled_write_char (by);	
		}
	}
	va_end(ap);
}
 e7a:	64 96       	adiw	r28, 0x14	; 20
 e7c:	0f b6       	in	r0, 0x3f	; 63
 e7e:	f8 94       	cli
 e80:	de bf       	out	0x3e, r29	; 62
 e82:	0f be       	out	0x3f, r0	; 63
 e84:	cd bf       	out	0x3d, r28	; 61
 e86:	df 91       	pop	r29
 e88:	cf 91       	pop	r28
 e8a:	1f 91       	pop	r17
 e8c:	0f 91       	pop	r16
 e8e:	ff 90       	pop	r15
 e90:	ef 90       	pop	r14
 e92:	df 90       	pop	r13
 e94:	bf 90       	pop	r11
 e96:	af 90       	pop	r10
 e98:	9f 90       	pop	r9
 e9a:	8f 90       	pop	r8
 e9c:	08 95       	ret

00000e9e <__divmodhi4>:
 e9e:	97 fb       	bst	r25, 7
 ea0:	07 2e       	mov	r0, r23
 ea2:	16 f4       	brtc	.+4      	; 0xea8 <__divmodhi4+0xa>
 ea4:	00 94       	com	r0
 ea6:	07 d0       	rcall	.+14     	; 0xeb6 <__divmodhi4_neg1>
 ea8:	77 fd       	sbrc	r23, 7
 eaa:	09 d0       	rcall	.+18     	; 0xebe <__divmodhi4_neg2>
 eac:	0e 94 63 07 	call	0xec6	; 0xec6 <__udivmodhi4>
 eb0:	07 fc       	sbrc	r0, 7
 eb2:	05 d0       	rcall	.+10     	; 0xebe <__divmodhi4_neg2>
 eb4:	3e f4       	brtc	.+14     	; 0xec4 <__divmodhi4_exit>

00000eb6 <__divmodhi4_neg1>:
 eb6:	90 95       	com	r25
 eb8:	81 95       	neg	r24
 eba:	9f 4f       	sbci	r25, 0xFF	; 255
 ebc:	08 95       	ret

00000ebe <__divmodhi4_neg2>:
 ebe:	70 95       	com	r23
 ec0:	61 95       	neg	r22
 ec2:	7f 4f       	sbci	r23, 0xFF	; 255

00000ec4 <__divmodhi4_exit>:
 ec4:	08 95       	ret

00000ec6 <__udivmodhi4>:
 ec6:	aa 1b       	sub	r26, r26
 ec8:	bb 1b       	sub	r27, r27
 eca:	51 e1       	ldi	r21, 0x11	; 17
 ecc:	07 c0       	rjmp	.+14     	; 0xedc <__udivmodhi4_ep>

00000ece <__udivmodhi4_loop>:
 ece:	aa 1f       	adc	r26, r26
 ed0:	bb 1f       	adc	r27, r27
 ed2:	a6 17       	cp	r26, r22
 ed4:	b7 07       	cpc	r27, r23
 ed6:	10 f0       	brcs	.+4      	; 0xedc <__udivmodhi4_ep>
 ed8:	a6 1b       	sub	r26, r22
 eda:	b7 0b       	sbc	r27, r23

00000edc <__udivmodhi4_ep>:
 edc:	88 1f       	adc	r24, r24
 ede:	99 1f       	adc	r25, r25
 ee0:	5a 95       	dec	r21
 ee2:	a9 f7       	brne	.-22     	; 0xece <__udivmodhi4_loop>
 ee4:	80 95       	com	r24
 ee6:	90 95       	com	r25
 ee8:	bc 01       	movw	r22, r24
 eea:	cd 01       	movw	r24, r26
 eec:	08 95       	ret

00000eee <atoi>:
 eee:	fc 01       	movw	r30, r24
 ef0:	88 27       	eor	r24, r24
 ef2:	99 27       	eor	r25, r25
 ef4:	e8 94       	clt
 ef6:	21 91       	ld	r18, Z+
 ef8:	20 32       	cpi	r18, 0x20	; 32
 efa:	e9 f3       	breq	.-6      	; 0xef6 <atoi+0x8>
 efc:	29 30       	cpi	r18, 0x09	; 9
 efe:	10 f0       	brcs	.+4      	; 0xf04 <atoi+0x16>
 f00:	2e 30       	cpi	r18, 0x0E	; 14
 f02:	c8 f3       	brcs	.-14     	; 0xef6 <atoi+0x8>
 f04:	2b 32       	cpi	r18, 0x2B	; 43
 f06:	41 f0       	breq	.+16     	; 0xf18 <atoi+0x2a>
 f08:	2d 32       	cpi	r18, 0x2D	; 45
 f0a:	39 f4       	brne	.+14     	; 0xf1a <atoi+0x2c>
 f0c:	68 94       	set
 f0e:	04 c0       	rjmp	.+8      	; 0xf18 <atoi+0x2a>
 f10:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__mulhi_const_10>
 f14:	82 0f       	add	r24, r18
 f16:	91 1d       	adc	r25, r1
 f18:	21 91       	ld	r18, Z+
 f1a:	20 53       	subi	r18, 0x30	; 48
 f1c:	2a 30       	cpi	r18, 0x0A	; 10
 f1e:	c0 f3       	brcs	.-16     	; 0xf10 <atoi+0x22>
 f20:	1e f4       	brtc	.+6      	; 0xf28 <atoi+0x3a>
 f22:	90 95       	com	r25
 f24:	81 95       	neg	r24
 f26:	9f 4f       	sbci	r25, 0xFF	; 255
 f28:	08 95       	ret

00000f2a <strcat>:
 f2a:	fb 01       	movw	r30, r22
 f2c:	dc 01       	movw	r26, r24
 f2e:	0d 90       	ld	r0, X+
 f30:	00 20       	and	r0, r0
 f32:	e9 f7       	brne	.-6      	; 0xf2e <strcat+0x4>
 f34:	11 97       	sbiw	r26, 0x01	; 1
 f36:	01 90       	ld	r0, Z+
 f38:	0d 92       	st	X+, r0
 f3a:	00 20       	and	r0, r0
 f3c:	e1 f7       	brne	.-8      	; 0xf36 <strcat+0xc>
 f3e:	08 95       	ret

00000f40 <strcpy>:
 f40:	fb 01       	movw	r30, r22
 f42:	dc 01       	movw	r26, r24
 f44:	01 90       	ld	r0, Z+
 f46:	0d 92       	st	X+, r0
 f48:	00 20       	and	r0, r0
 f4a:	e1 f7       	brne	.-8      	; 0xf44 <strcpy+0x4>
 f4c:	08 95       	ret

00000f4e <itoa>:
 f4e:	45 32       	cpi	r20, 0x25	; 37
 f50:	51 05       	cpc	r21, r1
 f52:	20 f4       	brcc	.+8      	; 0xf5c <itoa+0xe>
 f54:	42 30       	cpi	r20, 0x02	; 2
 f56:	10 f0       	brcs	.+4      	; 0xf5c <itoa+0xe>
 f58:	0c 94 b2 07 	jmp	0xf64	; 0xf64 <__itoa_ncheck>
 f5c:	fb 01       	movw	r30, r22
 f5e:	10 82       	st	Z, r1
 f60:	cb 01       	movw	r24, r22
 f62:	08 95       	ret

00000f64 <__itoa_ncheck>:
 f64:	bb 27       	eor	r27, r27
 f66:	4a 30       	cpi	r20, 0x0A	; 10
 f68:	31 f4       	brne	.+12     	; 0xf76 <__itoa_ncheck+0x12>
 f6a:	99 23       	and	r25, r25
 f6c:	22 f4       	brpl	.+8      	; 0xf76 <__itoa_ncheck+0x12>
 f6e:	bd e2       	ldi	r27, 0x2D	; 45
 f70:	90 95       	com	r25
 f72:	81 95       	neg	r24
 f74:	9f 4f       	sbci	r25, 0xFF	; 255
 f76:	0c 94 c6 07 	jmp	0xf8c	; 0xf8c <__utoa_common>

00000f7a <__mulhi_const_10>:
 f7a:	7a e0       	ldi	r23, 0x0A	; 10
 f7c:	97 9f       	mul	r25, r23
 f7e:	90 2d       	mov	r25, r0
 f80:	87 9f       	mul	r24, r23
 f82:	80 2d       	mov	r24, r0
 f84:	91 0d       	add	r25, r1
 f86:	11 24       	eor	r1, r1
 f88:	08 95       	ret

00000f8a <__utoa_ncheck>:
 f8a:	bb 27       	eor	r27, r27

00000f8c <__utoa_common>:
 f8c:	fb 01       	movw	r30, r22
 f8e:	55 27       	eor	r21, r21
 f90:	aa 27       	eor	r26, r26
 f92:	88 0f       	add	r24, r24
 f94:	99 1f       	adc	r25, r25
 f96:	aa 1f       	adc	r26, r26
 f98:	a4 17       	cp	r26, r20
 f9a:	10 f0       	brcs	.+4      	; 0xfa0 <__utoa_common+0x14>
 f9c:	a4 1b       	sub	r26, r20
 f9e:	83 95       	inc	r24
 fa0:	50 51       	subi	r21, 0x10	; 16
 fa2:	b9 f7       	brne	.-18     	; 0xf92 <__utoa_common+0x6>
 fa4:	a0 5d       	subi	r26, 0xD0	; 208
 fa6:	aa 33       	cpi	r26, 0x3A	; 58
 fa8:	08 f0       	brcs	.+2      	; 0xfac <__utoa_common+0x20>
 faa:	a9 5d       	subi	r26, 0xD9	; 217
 fac:	a1 93       	st	Z+, r26
 fae:	00 97       	sbiw	r24, 0x00	; 0
 fb0:	79 f7       	brne	.-34     	; 0xf90 <__utoa_common+0x4>
 fb2:	b1 11       	cpse	r27, r1
 fb4:	b1 93       	st	Z+, r27
 fb6:	11 92       	st	Z+, r1
 fb8:	cb 01       	movw	r24, r22
 fba:	0c 94 df 07 	jmp	0xfbe	; 0xfbe <strrev>

00000fbe <strrev>:
 fbe:	dc 01       	movw	r26, r24
 fc0:	fc 01       	movw	r30, r24
 fc2:	67 2f       	mov	r22, r23
 fc4:	71 91       	ld	r23, Z+
 fc6:	77 23       	and	r23, r23
 fc8:	e1 f7       	brne	.-8      	; 0xfc2 <strrev+0x4>
 fca:	32 97       	sbiw	r30, 0x02	; 2
 fcc:	04 c0       	rjmp	.+8      	; 0xfd6 <strrev+0x18>
 fce:	7c 91       	ld	r23, X
 fd0:	6d 93       	st	X+, r22
 fd2:	70 83       	st	Z, r23
 fd4:	62 91       	ld	r22, -Z
 fd6:	ae 17       	cp	r26, r30
 fd8:	bf 07       	cpc	r27, r31
 fda:	c8 f3       	brcs	.-14     	; 0xfce <strrev+0x10>
 fdc:	08 95       	ret

00000fde <_exit>:
 fde:	f8 94       	cli

00000fe0 <__stop_program>:
 fe0:	ff cf       	rjmp	.-2      	; 0xfe0 <__stop_program>
